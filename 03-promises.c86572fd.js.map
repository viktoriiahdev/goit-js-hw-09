{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,CACNN,SAAUA,EACVC,MAAOA,IAGTM,EAAO,CACLP,SAAUA,EACVC,MAAOA,OAMFO,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IACEC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,OAENC,WAAaC,OAAOL,EAAMM,OAC1BC,UAAYF,OAAOJ,EAAKK,OAExB,IAAK,IAAIE,EAAI,EAAGC,EAAQL,WAAYI,GAAKN,EAAOI,MAAOE,GAAK,EAAGC,GAASF,UACtEG,YAAW,KACTzB,EAAcuB,EAAGC,GACdE,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,UAEtD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,YAErDsB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({\n        position: position,\n        delay: delay,\n      });\n    } else {\n      reject({\n        position: position,\n        delay: delay,\n      });\n    }\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let {\n    elements: { delay, step, amount },\n  } = e.target;\n\n  delayValue = Number(delay.value);\n  stepValue = Number(step.value);\n\n  for (let i = 1, delay = delayValue; i <= amount.value; i += 1, delay += stepValue) {\n    setTimeout(() => {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, delay);\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","document","querySelector","addEventListener","e","preventDefault","elements","delay2","step","amount","target","delayValue","Number","value","stepValue","i","delay1","setTimeout","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.c86572fd.js.map"}